*: matches any string
?: matches any single character
[]: character class, matches any one character in the set
{}: brace expansion, generates strings (e.g., file{1,2})
$: variable expansion, replaces with variable value
`command` or $(command): command substitution, replaces with output
;: command separator, executes commands sequentially
|: pipe, redirects stdout to stdin of the next command
&: run command in background
&&: logical AND, next command runs if previous succeeds
||: logical OR, next command runs if previous fails
>: redirect stdout to file (overwrite)
>>: redirect stdout to file (append)
<: redirect file to stdin
<<: here-document, feeds multiline string to stdin
\: escape next character, prevents its special meaning
"...": double quotes, preserve literal text except expansions
'...': single quotes, preserve literal text completely
~: tilde expansion, expands to home directory
#: comment, ignores rest of line

